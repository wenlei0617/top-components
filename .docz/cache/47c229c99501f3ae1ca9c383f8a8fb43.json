{"remainingRequest":"D:\\myhome\\top-components\\node_modules\\thread-loader\\dist\\cjs.js??ref--11-1!D:\\myhome\\top-components\\node_modules\\babel-loader\\lib\\index.js??ref--11-2!D:\\myhome\\top-components\\node_modules\\source-map-loader\\index.js!D:\\myhome\\top-components\\src\\components\\Table\\thead.tsx","dependencies":[{"path":"D:\\myhome\\top-components\\src\\components\\Table\\thead.tsx","mtime":1564466308711},{"path":"D:\\myhome\\top-components\\node_modules\\docz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558950548336},{"path":"D:\\myhome\\top-components\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1558950550233},{"path":"D:\\myhome\\top-components\\node_modules\\babel-loader\\lib\\index.js","mtime":1557972304893},{"path":"D:\\myhome\\top-components\\node_modules\\source-map-loader\\index.js","mtime":1557823249675}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJEOlxcbXlob21lXFx0b3AtY29tcG9uZW50c1xcbm9kZV9tb2R1bGVzXFxiYWJlbC1wcmVzZXQtcmVhY3QtYXBwXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiRDpcXG15aG9tZVxcdG9wLWNvbXBvbmVudHNcXG5vZGVfbW9kdWxlc1xcYmFiZWwtcHJlc2V0LXJlYWN0LWFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiRDpcXG15aG9tZVxcdG9wLWNvbXBvbmVudHNcXG5vZGVfbW9kdWxlc1xcYmFiZWwtcHJlc2V0LXJlYWN0LWFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiRDpcXG15aG9tZVxcdG9wLWNvbXBvbmVudHNcXG5vZGVfbW9kdWxlc1xcYmFiZWwtcHJlc2V0LXJlYWN0LWFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkQ6XFxteWhvbWVcXHRvcC1jb21wb25lbnRzXFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICJEOlxcbXlob21lXFx0b3AtY29tcG9uZW50c1xcc3JjXFxjb21wb25lbnRzXFxUYWJsZVxcdGhlYWQudHN4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmltcG9ydCAqIGFzIFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICJwcm9wLXR5cGVzIjsKaW1wb3J0ICIuL3N0eWxlL3RoZWFkLnNjc3MiOwoKaWYgKHR5cGVvZiBJaXRlbXMgIT09ICd1bmRlZmluZWQnICYmIElpdGVtcyAmJiBJaXRlbXMgPT09IE9iamVjdChJaXRlbXMpICYmIE9iamVjdC5pc0V4dGVuc2libGUoSWl0ZW1zKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJaXRlbXMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJJaXRlbXMiLAogICAgICBmaWxlbmFtZTogInNyY1xcY29tcG9uZW50c1xcVGFibGVcXHRoZWFkLnRzeCIKICAgIH0KICB9KTsKfQoKdmFyIFRoZWFkID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkgewogIF9pbmhlcml0cyhUaGVhZCwgX1JlYWN0JENvbXBvbmVudCk7CgogIGZ1bmN0aW9uIFRoZWFkKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRoZWFkKTsKCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFRoZWFkKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTsKICB9CgogIF9jcmVhdGVDbGFzcyhUaGVhZCwgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMucHJvcHMuZGF0YTsKICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoZWFkIiwgewogICAgICAgIGNsYXNzTmFtZTogInRvcEMtdGFiZWwtaGVhZCIsCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAyMwogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRyIiwgewogICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgbGluZU51bWJlcjogMjQKICAgICAgICB9LAogICAgICAgIF9fc2VsZjogdGhpcwogICAgICB9LCBkYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0aCIsIHsKICAgICAgICAgIGtleTogaXRlbS5rZXksCiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiAyNgogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiAyNwogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0sIGl0ZW0ucmVuZGVyID8gaXRlbS5yZW5kZXIoaXRlbS50aXRsZSkgOiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiAyNwogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0sIGl0ZW0udGl0bGUpKSk7CiAgICAgIH0pKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwiLAogICAgLy8gQHRzLWlnbm9yZQogICAgdmFsdWU6IGZ1bmN0aW9uIF9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsKGtleSwgY29kZSkgewogICAgICAvLyBAdHMtaWdub3JlCiAgICAgIHRoaXNba2V5XSA9IGV2YWwoY29kZSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVGhlYWQ7Cn0oUmVhY3QuQ29tcG9uZW50KTsKClRoZWFkLmRlZmF1bHRQcm9wcyA9IHsKICBkYXRhOiBbXQp9OwpUaGVhZC5wcm9wVHlwZXMgPSB7CiAgZGF0YTogUHJvcFR5cGVzLmFycmF5Cn07CnZhciBfZGVmYXVsdCA9IFRoZWFkOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgVGhlYWQgIT09ICd1bmRlZmluZWQnICYmIFRoZWFkICYmIFRoZWFkID09PSBPYmplY3QoVGhlYWQpICYmIE9iamVjdC5pc0V4dGVuc2libGUoVGhlYWQpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRoZWFkLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiVGhlYWQiLAogICAgICBmaWxlbmFtZTogInNyY1xcY29tcG9uZW50c1xcVGFibGVcXHRoZWFkLnRzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihUaGVhZCwgIlRoZWFkIiwgIkQ6XFxteWhvbWVcXHRvcC1jb21wb25lbnRzXFxzcmNcXGNvbXBvbmVudHNcXFRhYmxlXFx0aGVhZC50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiRDpcXG15aG9tZVxcdG9wLWNvbXBvbmVudHNcXHNyY1xcY29tcG9uZW50c1xcVGFibGVcXHRoZWFkLnRzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["D:\\myhome\\top-components\\src\\components\\Table\\thead.tsx"],"names":["React","PropTypes","Thead","data","props","map","item","key","render","title","Component","defaultProps","propTypes","array"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;;;;;;;;;;;;;IAUMC,K;;;;;;;;;;;;;6BAOK;AAAA,UACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEP,aACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD;AAAA,eACR;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACE,MAAL,CAAYF,IAAI,CAACG,KAAjB,CAAd,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMH,IAAI,CAACG,KAAX,CAA/C,CADF,CADQ;AAAA,OAAT,CADH,CADF,CADF;AAWD;;;;;;;;;;;EApBiBT,KAAK,CAACU,S;;AAApBR,K,CACGS,Y,GAAe;AACpBR,EAAAA,IAAI,EAAE;AADc,C;AADlBD,K,CAIGU,S,GAAY;AACjBT,EAAAA,IAAI,EAAEF,SAAS,CAACY;AADC,C;eAkBNX,K;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAtBMA,K","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./style/thead.scss\";\nexport interface Iitems {\n  title: string;\n  key: string;\n  dataIndex: string;\n  render?: (text: string) => React.ReactNode;\n}\ninterface Iprops {\n  data: Iitems[];\n}\nclass Thead extends React.Component<Iprops> {\n  static defaultProps = {\n    data: []\n  };\n  static propTypes = {\n    data: PropTypes.array\n  };\n  render() {\n    const { data } = this.props;\n    return (\n      <thead className=\"topC-tabel-head\">\n        <tr>\n          {data.map((item: Iitems) => (\n            <th key={item.key}>\n              <span>{item.render ? item.render(item.title) : <div>{item.title}</div>}</span>\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\nexport default Thead;\n"]}]}